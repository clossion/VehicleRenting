"""Initial migration

Revision ID: 616611737d67
Revises: 
Create Date: 2023-06-24 21:13:49.774742

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '616611737d67'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rental')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_0900_ai_ci', length=128),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('address_country',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_0900_ai_ci', length=128),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('address_state',
               existing_type=mysql.VARCHAR(length=128),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('address_city',
               existing_type=mysql.VARCHAR(length=128),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('address_detail',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_0900_ai_ci', length=255),
               type_=sa.String(length=256),
               existing_nullable=True)
        batch_op.alter_column('user_type',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=64),
               existing_nullable=True)

    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.add_column(sa.Column('photo', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('price_per_day', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('location', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('delivery_option', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('same_city_return_option', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('long_term_discount_option', sa.Boolean(), nullable=True))
        batch_op.alter_column('brand',
               existing_type=mysql.VARCHAR(length=64),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('model',
               existing_type=mysql.VARCHAR(length=64),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.drop_constraint('vehicle_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['seller_id'], ['id'])
        batch_op.drop_column('year')
        batch_op.drop_column('owner_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicle', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('year', mysql.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('vehicle_ibfk_1', 'user', ['owner_id'], ['id'])
        batch_op.alter_column('model',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('brand',
               existing_type=sa.String(length=120),
               type_=mysql.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.drop_column('long_term_discount_option')
        batch_op.drop_column('same_city_return_option')
        batch_op.drop_column('delivery_option')
        batch_op.drop_column('location')
        batch_op.drop_column('price_per_day')
        batch_op.drop_column('photo')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('user_type',
               existing_type=sa.String(length=64),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('address_detail',
               existing_type=sa.String(length=256),
               type_=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_0900_ai_ci', length=255),
               existing_nullable=True)
        batch_op.alter_column('address_city',
               existing_type=sa.String(length=64),
               type_=mysql.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('address_state',
               existing_type=sa.String(length=64),
               type_=mysql.VARCHAR(length=128),
               existing_nullable=True)
        batch_op.alter_column('address_country',
               existing_type=sa.String(length=64),
               type_=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_0900_ai_ci', length=128),
               existing_nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_0900_ai_ci', length=128),
               existing_nullable=True)

    op.create_table('rental',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('vehicle_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('renter_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['renter_id'], ['user.id'], name='rental_ibfk_2'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicle.id'], name='rental_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
